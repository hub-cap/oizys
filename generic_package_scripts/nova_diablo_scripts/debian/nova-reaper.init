#! /bin/sh
### BEGIN INIT INFO
# Provides:          nova-reaper
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Should-Start:      libvirt-bin
# Should-Stop:       libvirt-bin
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: nova-reaper server
# Description:       Provides reaper server resources for the openstack
#                    cloud computing system
### END INIT INFO


set -e

DAEMON=/usr/bin/nova-reaper
DAEMON_ARGS="--flagfile=/etc/nova/nova.conf"
PIDFILE=/var/run/nova/nova-reaper.pid

ENABLED=true

if test -f /etc/default/nova-reaper; then
  . /etc/default/nova-reaper
fi

mkdir -p /var/run/nova
chown nova:root /var/run/nova/

mkdir -p /var/lock/nova
chown nova:root /var/lock/nova/

uid="$(getent passwd nova | cut -f3 -d:)"
gid="$(getent passwd nova | cut -f4 -d:)"

. /lib/lsb/init-functions

export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"
export TMPDIR=/var/lib/nova/tmp

if ! [ -x ${DAEMON} ] ; then
	exit 0
fi

case "$1" in
  start)
    test "$ENABLED" = "true" || exit 0
    log_daemon_msg "Starting nova reaper" "nova-reaper"
    start-stop-daemon --start --chdir /var/run --chuid ${uid}:${gid} -b -m --pidfile $PIDFILE --exec ${DAEMON} -- ${DAEMON_ARGS}
    log_end_msg $?
    ;;
  stop)
    test "$ENABLED" = "true" || exit 0
    log_daemon_msg "Stopping nova reaper" "nova-reaper"
    start-stop-daemon --stop --oknodo --pidfile ${PIDFILE}
    log_end_msg $?
    ;;
  restart|force-reload)
    test "$ENABLED" = "true" || exit 1
    $0 stop
    sleep 1
    $0 start
    ;;
  status)
    test "$ENABLED" = "true" || exit 0
    status_of_proc -p $PIDFILE $DAEMON nova-reaper && exit 0 || exit $?
    ;;
  *)
    log_action_msg "Usage: /etc/init.d/nova-reaper {start|stop|restart|force-reload|status}"
    exit 1
    ;;
esac

exit 0
