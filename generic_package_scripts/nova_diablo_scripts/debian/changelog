nova (1.0.0-137-GENERIC~1.gbpa782ac) UNRELEASED; urgency=low

  ** SNAPSHOT build @a782ac099a683bab9765446b4b87a38270d08725 **

  [ Nirmal Ranganathan ]
  * Revert "Throttling the ssh connections using pools" This reverts
    commit c1d52aa2a547c9a22f9a08f149afba064239855a.

  [ Craig Vyvial ]
  * adding a test to verify that the dns is using the correct auth
    token. DNS auth token is updated in the request and added tests to
    verify that the auth token is changed.

  [ Tim Simpson ]
  * Attempting to fix the DNS re-auth error.

  [ Nirmal Ranganathan ]
  * Adding a sleep before the volume failure tests to prevent a
    heisenbug

  [ Michael Basnight ]
  * Removed the project id references from the examples and docs.
    Conflicts:  apidocs/src/resources/samples/db-mgmt-instance-index-
    request.json  apidocs/src/resources/samples/db-mgmt-instance-index-
    request.xml  apidocs/src/resources/samples/db-mgmt-instance-index-
    response.json  apidocs/src/resources/samples/db-mgmt-instance-index-
    response.xml

  [ Nirmal Ranganathan ]
  * Removing X_AUTH_PROJECT_ID header requirement

  [ Craig Vyvial ]
  * make the example generation wait for the resize to finish
  * adding the instance resize action examples to the docs folder

  [ Daniel Salinas ]
  * fix for broken quotas

  [ Michael Basnight ]
  * Fixing the reddwarf-config cuz of the oizys changes
  * Fixing the reddwarf-config cuz of the oizys changes x2

  [ hub-cap ]
  * Adding a gitignore
  * Initial import of my terrible c++ code
  * Fixing receiver so it doesnt bork out when starting
  * Updating the guest
  * Addign a test sender w json
  * Cleaning up the header and adding some basic json stuff to receiver
  * Commenting out the json stuff since its leaking memory
  * Adding some build support to this puppy. this code was donated and
    the coder wishes to stay anonymous
  * Sprucing up the makefile
  * mo-better readme
  * more info to readme
  * Tidying up the guest prints and getting the method name from the
    json object in receiver
  * Fixing up the json method stuff so it works properly now in the
    receiver
  * Fixing the code up to not leak in the guest when sql exceptions
    happen, DOH!
  * misc upgrades. * Adding libuuid * fixing is_root_enabled return type
    * adding uuid generation to the guest * adding all the methods to
    receiver * fixing test_sender to send a message that is specified in
    the argv * adding some libs to initialize
  * Getting enable/disable root working
  * Removing some silly debug stmts
  * Pushing updates to get list_users working a bit better

  [ Tim Simpson ]
  * Added some stuff to the initialize and ready bash scripts in the
    Vagrant directory. Added a Boost Build file (Jamroot.jam). Added an
    example unit test, got it working with Valgrind, though if Valgrind
    detects an error the build isn't failed. >:( Fixed a bug in
    test_sender.cc.
  * Changed the initialize.sh script to use tee and made the Jamroot use
    amqp from the usual place instead of the funky directory I made up.
  * Changed Jamroot lib_amqpcpp to use a named library rather than a
    specified file path.
  * Added sudo to some initialize.sh commands.
  * Fixed up Jamroot.jam and initialize to use the default available
    Boost debian packages.

  [ hub-cap ]
  * Adding vector back in
  * Adding println to show the message json

  [ Tim Simpson ]
  * Changed code in Guest to use an auto_ptr for PreparedStatements in
    order to cut down on the number of exception catch clauses. Made
    MySQLUser use properties, wrote some type defs for smart_ptrs so
    callers receiving MySQLUsers didn't need to worry about it. Fixed
    tee usage in initialize.sh.
  * Externalized the receiver daemon logic into two classes: one which
    converts AMQP messages into JSON objects, the other which takes JSON
    objects and feeds them to the guest methods. This is to make unit
    testing easier. Also fixed a bug in test_sender I'd added, and added
    mysql installation to initialize.sh.

  [ hub-cap ]
  * Added samples and got the makefile working again

  [ Tim Simpson ]
  * Moved samples.txt into the root directory.
  * Changed most of the Guest class into MySqlGuest. Created a second
    class to handle sending and retrieving JSON messages to it. I had to
    use some macros but I think I cut down on duplication of data as
    much as I could have.
  * Added a test for the sql_guest functionality. Updated the
    send_and_receive to actually start a tiny fake daemon. Instantly
    found a memory leak (I think) and am investigating. Made
    receiver.finish accept both the original json_object * as well as
    the response json_object *.
  * Added a test / report to show the effects of various dependencies on
    memory usage.
  * Tried to create a makefile that could run all the tests.

  [ hub-cap ]
  * Mysql over unix socket not tcp. Fixing initialize up.
  * Fixing the warning message for the con
  * Adding basic configfile love
  * Adding mysql params to the config file
  * Adding list_databases call and tried to fix up some of the old calls
    in the guest.
  * Adding some love to parsing the my.cnf to get the user/pass and use
    those for the db connection

  [ Tim Simpson ]
  * Cleaned up some code, extracted sender into its own class.
  * Took out AMQP Cpp and rewrote sender and receiver to use the basic C
    rabbit library. Wrote a C++ class to represent the AMQP connection
    and channels to accomplish this. Added a log class to keep us from
    using syslog everywhere. In debug mode it prints to standard out,
    which is useful.
  * Removed cruft from the vagrant/initialize.sh script.

  [ hub-cap ]
  * Fixing the tests to work w/ the new configfile, and hacking the
    username/password in the memory test
  * Adding a info2 to the log that allows for printf style logging
  * Adding error2 and updating the daemon
  * Updating exception in receiver daemon and cleaning up headers in
    log.cc. adding forgotton class

  [ Tim Simpson ]
  * Fixed Log, which was broken in the release build. Changed test for
    ConfigFile. Fixed memory leak in receiver. Added guest_exception so
    we'd have something unique to throw, added code to throw it from
    config file constructor after seeing the check in the test. Re-
    enabled send_and_receive. I'm getting an error that some code points
    to uninitialized bytes, but afterwards Valgrind claims there's no
    errors (??). It seems to be in the core rabbit libs. :(
  * Added code to trim the quotes off the SQL init user name and
    password.
  * Fixed the evil wicked memory leak. The twist ending was that *I* was
    its father! * Added an exe we can run in Valgrind to find leaks
    (kind of a scratch pad). * Added a debug method to the Log class so
    we could liter the standard out with extra stuff if we need to. *
    With Mike's help fixed the SQL guest class to parse username and
    passwords ensconsed in quotes. * Added a SQL exception class our
    Guest class can throw to denote exceptions. * Added a feature to the
    receiver daemon in debug mode where sending a method of "exit" will
    cause it to shut down (so we can see the Valgrind info without all
    the noise it gives us when we kill it with CTRL +C). * Changed the
    receiver to only use one channel.
  * Added the leak_tester source file.
  * Put all classes and types into proper namespaces.
  * Added APT functionality along with several utility classes, cleaned
    up build file. * Added wrapper classes to the JSON stuff to avoid
    having to check for errors in every single spot. Updated the code to
    use these. * Added APT functionality. I wanted to use the real
    native APT code but so much of the functionality in apt-get is not
    easily callable. We'll look at doing it the real way later, for now
    I'm calling the process the same way we did in the Python guest. *
    Simply calling apt-get was not as easy as I'd have liked either. I
    created a Process class to help with this along with a IO module
    which uses the SIGALRM signal for time outs. * Coded the JSON part
    of the apt code and wrote tests for it which execute seperately. *
    Polished the Jamroot.jam file. There were issues in Boost Build with
    referring to the same source file from multiple targets, so I
    created a custom rule making it easy (I hope anyway) to define a
    compilation unit, its unit-test code, and the dependencies it
    requires. Before, the lib dependency was dependent on all the unit
    tests. Now each unit is dependent on its own tests, and anything
    which uses that unit can only run if the tests pass.
  * Changed the name of source files which referred to only one class to
    the Pascal-cased name of the class. For source files which entirely
    represent a namespace, those simply get the namespace name. Made
    some classes Pascal cased. Put the mysql and apt code into its own
    namespace.
  * Removed old TODOs.
  * Renamed various MySql classes and methods to be consistent with the
    Python code. Finished the MySql code, but have been unable to come
    up with good tests for it yet. Added some extra functionality to the
    Process class and IO functions to help with the MySql code.
  * Extracted a MySqlConnection class out of the MySqlGuest class to
    better show its purpose in the interface. Moved the
    "generate_password" function out of the class and into the
    nova::guest::mysql namespace. Changed Log.debug to print to
    std::err. Changed apt::fix so that when "dpkg --configure -a" is
    called if it writes to std::out the call won't be considered a
    failure. Now it just assumes it worked if it eventually see EOF,
    which is the best it can do. Created overloads of the "execute" and
    "wait_for_eof" functions of the Process class which capture stdout
    to a stream. This made it easier to check some things in the
    integration tests. Removed MySqlGuest::disable_root. Integration
    testing revealed nearly nothing in the MySqlGuest class worked which
    seemed to be an issue. The culprit is that the MySQL prepared
    statements don't work for most administrative commands. We're going
    to probably end up escaping stuff client side which feels wrong. I
    can't figure out how to call the escape string method in the normal
    C libs either, so for now there's a dummy method which returns the
    same string passed in. Got beguiled by the notion of reusing our
    real Proboscis-style integration tests by wrapping the new agent
    code in Python. Boost Python was easy to use initially and it looked
    as if we'd get it for free. However as I began to wrap the various
    POCOs (plain old C objects) in the nova::guest::mysql namespace the
    wrapping process got difficult and I realized no one would
    appreciate the added complexity. Thankfully, even though the Python
    code had been making use of Pexpect and other libs the integration
    tests were easier to rewrite in C++ than I anticipated. However the
    end result isn't as readable as I'd have liked.
  * Deleted all the Python stuff and cleaned up the file structure a
    bit. Added a safety feature to the integration tests so someone
    won't run them not understanding what they do and then get sad when
    they loose their MySQL install. To run them now, set
    DESTROY_MYSQL_ON_THIS_MACHINE=PLEASE.
  * Preliminary Integration work with Nova, switched to MySQL C lib *
    Added a flags class mimicing the ones from Nova. * Added a utils
    namespace with functions to get the address of devices, so the guest
    can find its IP address and ask the Nova database what it's name is.
    * Changed the MySQL stuff to use the C libs rather than the C++
    ones. * Wrote integration tests for the new MySQL classes I had to
    write, as well as integration tests for the MySqlGuest and
    MySqlPreparer test. * Began work to statically link the guest agent.
    Left a lot of commented out cruft in the Jamroot.jam file though...
    :( * Got Nova and the Guest to communicate. If the guest replies to
    Nova and it isn't 100% correct, Nova silently swallows the error
    which is incredibly frustrating to figure out, so I changed the
    interface of the message handler and the code in receiver_daemon so
    that the format Nova expects will be assured. * Changed the JSON
    stuff so that the to_string() method was on the JsonData base class
    where it belonged. Wrote some helper static methods on the JsonData
    class so we could create instances representing just a single
    element such as string or null or something. * Added some cruft to
    Receiver, Sender, and the AMQP classes and changed them a little.
    Changed AMQP to send data as "application/json" which was necessary.
    * Disabled tests which depended on a certain environment. Changed
    some tests to work in the Debian environment.
  * Fixed a lot of little bugs. Cleaned up the receiver_daemon code to
    use hostname for queue and grab other settings from the flag
    settings.
  * Memory Leak Hunt * Added some documentation to the Jamroot.jam file.
    Enabled Valgrind for all tests (would like to make it optional and
    enabled via an environment variable but it seems hard to do so). *
    Fixed a mild memory leak (it was constant and not a real danger in
    production) picked up by Valgrind in the MySql code. * Fixed a
    pretty awful memory leak I'd recently added to the JsonArray class.
    * Changed the JSON message interpretter to return a null pointer (or
    an empty smart pointer) when they can't match the method. * Fixed
    some JSON tests which freed json_object struct pointers. I changed
    the constructors to free this memory if they failed. * Added a
    get_host_name method to utils. Its completely untested and I'm a
    monster! * Added some stuff to the receiver_daemon.cc in
    anticipation of further integration work.
  * Integration work continued * After statically linking a bunch got
    the program's virtual memory down to 20152K. Still too big. *
    Renamed "FlagValues" to "FlagMap" and gave the first name to a class
    named FlagValues which has accessors for named properties. This
    feels a bit like overkill but after going with the alternative for a
    long time I think this way is preferrable.
  * Closer to integration. The prepare call may work (ran into unrelated
    issues manually testing it). Guest call status unknown. * The memory
    consumed by the AMQP client is now configurable via a flag. * The
    apt code was changed from several free-standing functions to a
    class. There is an option to use sudo or not as well which is driven
    by the flags and also turned out to be completely unnecessary. *
    Changed MySqlConnection to have a public close method, making it
    possible to close and re-open the connection each time in the
    receiver loop and avoid closed connections. * Changed
    MySqlConnection to optionally get its values from the my.cnf file
    (this functionality was moved from MySqlGuest) at connection time. *
    Changed MySqlGuest to accept a reference to MySqlConnection in its
    constructor. * Changed MySqlMessageHandler to accept a pointer to
    the new AptGuest class, since it needs them both for the call to
    prepare. * Fixed up all the JSON handling for the MySQL guest calls
    (not yet tested). * Added a call to "apt-get update" before each
    install call as requested by Ed (koko). * Fixed a lot of bugs where
    I was calling programs with the first argument as something other
    than an absolute file path. Changed one piece of code to set an
    environment variable before calling a program and wrote a tiny test
    for the process class to confirm this worked. * Fixed a bug I'd
    introduced changing the install code to make it stricter than the
    Python version. Turned out this was *too* strict and was causing
    problems. * Process:wait_for_eof() was not throwing a
    TimeOutException in the event of time out. The rest of the code
    seemed to expect that it would so I changed it.
  * Added a small change to the apt tests to make them more flexible.

  [ Michael Basnight ]
  * Adding debian packages

  [ hub-cap ]
  * Adding debian/tmp
  * changing the name to protect the GUILTY
  * Removing tmpdir from packages
  * Adding a sudoers, a init script, and updating the rules file
  * removing the debhelper files

  [ Tim Simpson ]
  * Fixed a few issues in prepare.
  * Fixed up stuff to work with Prepare.
  * Added periodic tasks * Created a new class MySqlNovaUpdater to
    handle the duties of reporting statuses back to the Nova host. *
    Added extra commands to the nova user's sudoers file. * Added a
    thread to periodically initiate the periodic_events method. *
    Changed format of the JSON incoming messages since it wasn't very
    intuitive. Now the method name is passed along side the args, by
    themselves. If we need other stuff we can dig it out later and add
    it to the interface. * Changed the Sender and Receiver class to
    accept an AmqpConnectionPtr in their constructor instead of making
    their own when I realized giving the Sender its own connection would
    require another four megabytes. Also made Sender's constructor
    signature much simpler. * After discovering that some exceptions
    completely destroy the ability to use an AMQP channel index again on
    a connection, added some code to store bad channels to avoid them. *
    Refactored MySqlMessageHandler to make it easier to see where new
    connections to various databases were being created. * Had to add a
    hack to MySqlPreparer and MySqlConnection to avoid a permissions
    issue (the current Python code also avoids this issue, although it
    uses a different method). * Fixed a bug in
    utils::get_ipv4_address(), which had only appeared to work before. *
    Overcame a bug where the exchanges and queues don't seem to be
    declared identically in what may turn out to be the wrong way; I
    passively declare them and if no error is thrown proceed. However I
    found out later in testing the Python code in Nova throws-up if the
    agent declares them first, so this is yet another issue that still
    needs to be sorted out.
  * Fixed serialization issues and some bugs. * Changed how the Receiver
    gets input to make it harder to screw up. Some of the common JSON
    parsing stuff was moved to Receiver. * Fixed a lot of nitpicky bugs
    (mismatches really) in the JSON serialization / RPC stuff. Some
    arguments aren't always sent from the Python side so I changed them
    to be optional.
  * Missed an 's'.
  * Took the apt tests out of the main run since they can destabilize
    apt on a machine and impede other scripts. Fixed a small quirk in
    the nova-guest.init script which caused nova-guest to run twice, and
    another bug in vagrant/initialize.sh which caused the the reddwarf-
    ci install command to fail.
  * Added some changes to nova-guest.init suggested by hub_cap. They
    worked in testing.
  * Attempt to protect MySQL code from injection attacks. * Changed
    MySqlGuest::set_password to use a prepared statement instead of a
    normal query. * Realized in release mode, any exceptions thrown from
    a method weren't shown. Oops. Fixed it.
  * Changed periodic tasks to not use the queue * Before periodic tasks
    were executed by sending a message to the queue. At the time I felt
    it was easier to than having to resort to mutexes and stuff, but it
    turned out the code wasn't written that way anyway, so in the
    seperate thread I just make a new connection and everything is fine.
  * Moved core MySQL functionality into nova::db::mysql namespace. *
    This functionality is used in multiple places in the codebase and
    not for functions that are purely Guest related, so that namespace
    didn't entirely fit. * Renamed "nova::guest::mysql::MySqlGuest" to
    "MySqlAdmin." * Moved the IsoTime class into nova::guest::utils.
  * Added code to update service table with heart beat and increase
    reporting count * This code executes at a different frequency than
    periodic events and updates the service table in the nova database.
    * Added some helper methods to the MySQL code to more easily grab
    fields as specific data types. * Added more flag values. * Revamped
    the README. * Added code to auto-reconnect to rabbit but writing a
    test is going to take awhile, so I'm not considering this done yet.
  * Fixed a compiler error for the release build. Cleaned up the code
    for the time classes in nova::guest::utils.
  * Fixed memory leaks, made agent actually handle Rabbit being down ---
    ------------------------------------------------------------- *
    Moved the code to reconnect to rabbit to its own class after it
    became even more complex and created the ResilentReceiver. *
    Discovered and fixed a pretty awful memory leak in the
    AmqpConnection class which occurred when an exception was thrown
    from the constructor.
  * Improved behavior when rabbit connection is lost, fixed RPC bugs,
    blocked db status updates during "prepare" call. * The exchange name
    was defined in the flags in Nova, so I added that to Sneaky Pete. *
    I was defining the exchange as "direct", not "topic" like Nova.
    Fixed it. * An exception could be thrown in the AmqpChannel smart
    pointer release method. Decided too many classes might use a smart
    pointer as a field and thus call this in their destructor, so I made
    it safer. * Changed how I declared the exchange until I got it the
    same as Novas. * Added code to catch issues with librabbit
    connections and automatically reconnect before preceding. It even
    sleeps for a time defined in the flags before attempting to connect
    again. * Tried as hard as I could to ignore SIGPIPE but could not.
    Librabbit-c raises this signal when the socket to Rabbit is closed
    (when Rabbit dies) even when you're closing the thing. This is a
    known issue, and the solution is to ignore the signal, but I just
    could not get it to work. Instead, I changed the librabbit library
    code where "send" was being called. I left what I attempted in this
    commit for future reference. * Added try / catches around nearly
    everything in the receiver_daemon so things like disconnects from
    the Nova infastructure DB won't kill Sneaky Pete. * The issues with
    reconnecting to Rabbit are not yet 100% solved- there is an
    integration test I'm writing in the Reddwarf code base which does
    not yet fully pass.
  * Updating periodic tasks to not run for a minute (or whatever the
    flag file states) after start-up. Logging each time we update the
    MySQL app status so we can see when a bug plaguing our CI test runs
    happens.
  * Fixed a bug in flags and the send_and_receive test.
  * Added code to set the guest_status 'updated_at' field when updating
    the row.
  * Attempting to remove any spot where we log a password.
  * Added more rules to how MySqlNovaUpdater worked. * Before, the
    prepare and the periodic_tasks functions would simply call this
    class and change the state in the Nova database. This turned out to
    not be a good idea because there was a race condition, where the
    periodic_task method might check the status of the MySQL instance
    before it was installed and report the state of it as in error. We'd
    mitigated this race condition with a work-around but the root cause
    was still bad. * Now MySqlNovaUpdater checks the Nova DB, and if the
    status does not exist or is BUILDING or FAILED, it assumes MySql
    isn't present and does not check its status or update the Nova DB. *
    Changed the interface of the MySqlNovaUpdater class so the rules for
    how this works will stay there and not in the client classes which
    use it. * Added a mutex to MySqlNovaUpdater since the same instance
    will now be called from more than one thread. * Added a unit test
    for MySqlNovaUpdater.
  * Added work around for functional tests. * The agent tries to find
    its instance ID on start up by looking it up in the database. This
    works fine except when the agent is started up for the functional
    tests, in which case it won't be able to find (and does not need)
    its instance ID. So I added a flag value named "preset_instance_id"
    which can be used to bypass the id retrieval. * Fixed the
    MySqlNovaUpdater_demo app.
  * Wait to reconnect to Nova DB at critical junctures. * If the Nova DB
    can't be reached when the status is initially grabbed (on start up)
    or when the prepare call finishes, Sneaky Pete now waits possibly
    forever for it to come online.
  * First commit of Operation Woodchuck (code name OW).
  * Changed logging to show line numbers, not use syslog, and rotate
    files.
  * Changed tests to run with new logging code, update guest.conf file.
  * Fixed log tests, added a function to the Logs where it rotates the
    file if they exceed a certain size.
  * The logs can now rotate based on time.
  * Removed the logging I was doing in the tests for logging (which was
    different from the logging that was under test).

  [ hub-cap ]
  * Adding libgc1c2 garbage collector for install purpose

  [ Tim Simpson ]
  * Made MySQL ping and reconnect during the ensure() call rather than
    always create a new connection. * Added unimplemented private copy
    constructor and assignment operators to appropriate classes, which
    I've been forgetting to do lately. * There was a pattern where a
    MySqlConnection would be paired with a database name, and the client
    code would have to keep the db_name and call the "use_database"
    method everywhere. I made a subclass called
    MySqlConnectionWithDefaultDb which always connects to some db and
    got rid of the use_database() method. * Made some fields const where
    possible.
  * Fixed a FD leak which was pretty bad * Also added a LogApiScope and
    MySqlApiScope class to RAII-ify those two apis. * Removed syslog
    from the Log api.
  * May have found a work-around for the Fat Pete dilemma. * Took a bit
    of code out of the FlagMap class where I was setting the map during
    a call to an accessor. * Switched some instances of "map.count(blah)
    to "map.find(blah) == map.end()". * Made Sneaky Pete take a nap
    after starting the thread, right before it creates the receiver. For
    reasons that are magical this seems to keep Sneaky Pete from gaining
    60MB in virtual memory. Only CI will prove if this can even suffice
    as a work-around to this problem.

  [ Craig Vyvial ]
  * added the ability to get diagnostics from sneaky-pete
  * cleaning up unused parameters and deps
  * fix the json being returned as a string

  [ Tim Simpson ]
  * Added a "restart" method. * Renamed MySqlPreparer to MySqlApp, since
    it seems to be a class centered around managing the MySQL
    application (versus the database) and has more responsibilities than
    just preparing it. * Renamed MySqlNovaUpdater to MySqlAppStatus,
    since its main responsibility was to be the source of truth on the
    status of the MySQL app (the fact it talked to Nova about this was
    incidental). * Added a "restart" method to MySqlApp. * Took the
    "prepare" call out of MySqlMessageHandler since the one call forced
    that class to own a Config object with three private fields, and
    made a new class called MySqlAppMessageHandler which takes the
    config values in its constructor and forwards GuestInput to MySqlApp
    methods. * Fixed a strange issue with the Amqp code that causes
    Sneaky Pete to die. Not sure what is causing this issue but the fix
    does the trick and should be harmless at worst. * Added 'paused' to
    MySqlAppStatus codes. This is because Reddwarf may set the status to
    this before it reboots the container. I'm not sure if the agent will
    ever read this value but wanted to be consistent.

  [ Craig Vyvial ]
  * cleaned up code making a struct of the diagnostic data
  * convert struct values to ints instead of strings
  * updating the tests to have a range rather than just greater than 0

  [ Ed Cranford ]
  * Adding the power of resize to Peter the sneakiest.

  [ Tim Simpson ]
  * Added a way to check if a file exists without logging to avoid a
    lock-up when called from the log rotate code. Changed the logging
    system to write a warning message to stdout in the event the logging
    system is not initialized before throwing an exception. Fixed the
    MySqlAppStatus_demo.
  * Fixed bug where stop_mysql RPC API method wasn't setting status.
  * Changed MySqlAppStatus::start_mysql method to optionally update the
    db with the new status.
  * Fixed a bug with the logging utility where files were being
    overwritten on start-up.
  * Added better log message when start_mysql_with_conf_changes finds
    the app in a running state.
  * Removing the daemon call in receiver_daemon as it is redundant in
    production.
  * Changed the version.h file to be generated by Boost Build. * When an
    RPC message isn't logged to avoid printing a password, the code now
    explicitly acknowledges it is not printing the message to avoid
    confusion.
  * Adding a file needed by Boost Build which I forgot in my last
    commit. :(
  * Deleted some cruft.
  * Changed reddwarf-ci script and Vagrantfile to incorporate embedded
    Sneaky Pete source.
  * Changed reddwarf-ci so that the bin directory of the guest agent
    won't be owned by root.
  * Changed reddwarf-ci so that the parrot directory of the guest agent
    won't be owned by root.
  * Fixed guest version info. * Added a test so that this won't happen
    again.

  [ Sudarshan Acharya ]
  * Updated the readme to fix some minor indescrepencies in the example
    commands.

  [ Tim Simpson ]
  * Stubbed out updateGuest API method. * Added preliminary docs. * Put
    in stub for the Reddwarf compute api.
  * Work on update guest call. * Added a guest-cli tool to send messages
    to the guest. Have no idea why I didn't do this months ago. *
    Updated reddwarf-ci to build a fake version of Sneaky Pete so the
    tests will have something to update to. * Prelimary integration test
    of happy path, compute.api, compute.manager, and guest.api code.

  [ Ed Cranford ]
  * Added tests and API wiring for guest update functions. Fixed TODO
    example requests and responses in apidocs.
  * Fixed the XML request example.
  * Revamped GuestStatus class, replaced power_state with GuestStatus in
    the Status API, full coverage for update_guest in unit tests.

  [ Tim Simpson ]
  * Added guest functionality and integration tests for Guest upgrade
    API call.  * Commented most methods of AptGuest, moved some code
    around.  * Added "update_guest" RPC method and
    AptGuest::install_self_update which updates the guest.  * Pulled a
    method out of Interrogator so we could use it to find info on any
    process.  * Created an "execute_and_abandon" static method in
    Process that doesn't redirect stdin/ out.  * Clean the Process class
    up a bit by adding some resource handling classes.  * Changed the
    reddwarf CI file to build two versions of the guest, one of which is
    reports a different version string and has dishonest metadata
    indicating its an upgrade.  * Added the integration test for update
    guest by allowing the test conf file to state a shell script to call
    to make an upgrade available.  * Changed the management API to only
    return a 404 if the instance isn't found versus if any exception is
    raised from compute.api.  * Changed all calls to the
    "guest_status_upgrade" to use an instance of the GuestStatus class.
    * Changed the description of GuestStatus to match the original
    mapping from an integer code to the power state description, then
    changed code to use the description of GuestStatus when updating the
    DB.

  [ Ed Cranford ]
  * Examples generated by example generator. How about that.

  [ Tim Simpson ]
  * Fixed the diagnostic tests and fixed the docs.

  [ Daniel Salinas ]
  * initial stub
  * final patch to fix missing storage from index management call

  [ Sudarshan Acharya ]
  * public api: fixed typo with error message related to volume size of
    instance

  [ Tim Simpson ]
  * Removed the old guest upgrade code.

  [ Sudarshan Acharya ]
  * public api: fixed restart instance accepted even though instance
    isn't ready

  [ Tim Simpson ]
  * Took out all the ability to get a result set from a
    PreparedStatement as the implementation was incompatable with newer
    versions of the MySQL client lib.

  [ Sudarshan Acharya ]
  * Using instance_exists method that is already available.

  [ Ed Cranford ]
  * Reconciling the IP and volume associations.

  [ vagrant ]

 -- vagrant <vagrant@vagrant>  Tue, 13 Mar 2012 15:54:54 -0500

nova (1.0.0-135-GENERIC~1.gbpe6a4b0) UNRELEASED; urgency=low

  ** SNAPSHOT build @e6a4b017b586658403c11ae8f6198e29cb14a32f **

  * UNRELEASED

 -- vagrant <vagrant@vagrant>  Thu, 01 Mar 2012 15:52:04 -0600

nova (1.0.0-132-GENERIC~1.gbpe6a4b0) UNRELEASED; urgency=low

  ** SNAPSHOT build @e6a4b017b586658403c11ae8f6198e29cb14a32f **

  [ Craig Vyvial ]
  * adding resize instance by flavor id in the api and added the methods
    to the code path with log messages to allow it to compile and run.

  [ Tim Simpson ]
  * Added nontested compute manager and guest api changes for
    resize_in_place.

  [ Craig Vyvial ]
  * adding resize instance by flavor id in the api and added the methods
    to the code path with log messages to allow it to compile and run.

  [ Tim Simpson ]
  * Added nontested compute manager and guest api changes for
    resize_in_place.
  * Added some helper functions to the reddwarf.api.status module.

  [ Daniel Salinas ]
  * first pass at aggregating all instance size methods to facilitate an
    easy 'on host' resize. Finished refactor for resize_in_place add
    public method for resizing in place Added method to allow resetting
    an instance back to it's orginal size fixed typo of argument passed
    to _set_diskspace()

  [ Craig Vyvial ]
  * added validation of the status of the instance id before the public
    ip sends the message to the compute api.
  * added a few integration tests for the resizing of an instance

  [ Daniel Salinas ]
  * changed resize_in_place to raise InstanceUnacceptable if the resize
    fails to complete instead of returning False
  * fixed typo in method doc for _set_instance_size()

  [ Craig Vyvial ]
  * refractored the public api added unit tests for the public api
  * adding more unit test coverage
  * clean up unit tests

  [ Tim Simpson ]
  * Completion of ReddwarfComputeManager resize_in_place. * Also added a
    change to the reddwarf-ci script to test sneaky-pete changes in the
    resize-flavor branch.

  [ Craig Vyvial ]
  * working on making ci pass its tests....

  [ Ed Cranford ]
  * Adding unit tests for the status api.

  [ Craig Vyvial ]
  * a few fixes... - Same method names - Need a new flavor id to be a
    valid call - Changed the name of the
  * Fixed the check status call for calling actions on instances
  * fixing up the ci test yet again
  * changed the way we check for exceptions in ci tests
  * elevating the context to get the host memory
  * elevated the context correctly
  * fixing unit tests with admin context
  * updating the ci tests

  [ Daniel Salinas ]
  * first fix for unittests
  * patches for more unittests
  * fixed broken calls to self.assertRaises
  * fixed set_diskspace tests
  * fixed several tests broken by refactoring.  also fixed broken
    unittests for set_onboot()
  * fixed broken _set_diskspace test methods
  * fixed last broken unittest.  All unittests pass
  * added unittests for _set_instance_size
  * fixed broken set_instance tests
  * added unittests for resize_in_place
  * added final test for instance size reset
  * comment out 2 failure cases because of exception order bug in mox,
    need to find a solution to implement these 2 tests

  [ Tim Simpson ]
  * Changed AfterInstanceCreation test to not fail if the state is no
    longer BUILDING.

  [ Craig Vyvial ]
  * updated tests

  [ Ed Cranford ]
  * WADL changes and stub samples for instance flavor resizing.
  * Changed the type of the deleted field in mgmt list instances. Added
    info for resizeInstance in dbaas.wadl.
  * Changed those ids to flavorRefs as they should be

  [ Craig Vyvial ]
  * allowing to see what repo is being used for sneaky-pete
  * fix the guest expection what is the latest sneaky version?
  * fixed a race condition in the tests making fixes all around from the
    PR fixed the unit test that was invalid
  * changed the sneaky-pete repo back to hub-cab
  * fixed the sneaky-pete repo. no need to change branches

  [ Craig ]
  * Update integration/vagrant/reddwarf-ci

  [ Tim Simpson ]
  * Removed the Version header generation from reddwarf-ci since Sneaky
    Pete does that itself now.
  * Changed status code returned when the volume size passed to resize
    instance from 400 to 413. * Added "OverLimit" exception class to the
    reddwarf.exception module.
  * Tracking down a bug. * Changed instance_actions.py tests a bit. *
    Added Checker class to have multiple asserts in a function and see
    every single failure rather than just the first one.

  [ vagrant ]

 -- vagrant <vagrant@vagrant>  Thu, 01 Mar 2012 10:13:17 -0600

nova (1.0.0-131-GENERIC~1.gbp59c264) UNRELEASED; urgency=low

  ** SNAPSHOT build @59c26416d05df075ab1e14bb44099bd87ca63008 **

  * UNRELEASED

 -- vagrant <vagrant@vagrant>  Thu, 23 Feb 2012 13:39:51 -0600

nova (1.0.0-GENERIC~1.gbp59c264) UNRELEASED; urgency=low

  ** SNAPSHOT build @59c26416d05df075ab1e14bb44099bd87ca63008 **

  * UNRELEASED

 -- vagrant <vagrant@vagrant>  Thu, 23 Feb 2012 13:18:32 -0600

nova (1.0.0-GENERIC~1.gbp59c264) UNRELEASED; urgency=low

  ** SNAPSHOT build @59c26416d05df075ab1e14bb44099bd87ca63008 **

  [ Michael Basnight ]
  * Adding in the volume setup in the compute manager and starting the
    path ensure
  * Adding the ensure path code
  * Doing some fixing and adding some debug printing
  * turning the path check into a poll
  * turning the path check into a poll

  [ Tim Simpson ]
  * Changed the volume_client._setup_volume method to raise a
    VolumeAlreadySetup error if the driver detects discovery failed
    because the volume was already discovered. Changed some exceptions
    in the reddwarf.exception module to inherit NovaException instead of
    NotFound.

  [ vagrant ]

 -- vagrant <vagrant@vagrant>  Thu, 16 Feb 2012 21:26:36 -0600

nova (1.0.0-GENERIC~1.gbp1228db) UNRELEASED; urgency=low

  ** SNAPSHOT build @1228dbe35969b3952e9dfbfd30ba000c32f5e215 **

  * UNRELEASED

 -- vagrant <vagrant@vagrant>  Thu, 16 Feb 2012 20:20:28 -0600

nova (1.0.0-GENERIC~1.gbp1228db) UNRELEASED; urgency=low

  ** SNAPSHOT build @1228dbe35969b3952e9dfbfd30ba000c32f5e215 **

  * UNRELEASED

 -- vagrant <vagrant@vagrant>  Thu, 16 Feb 2012 19:41:37 -0600

nova (1.0.0-GENERIC~1.gbp1228db) UNRELEASED; urgency=low

  ** SNAPSHOT build @1228dbe35969b3952e9dfbfd30ba000c32f5e215 **

  * UNRELEASED

 -- vagrant <vagrant@vagrant>  Thu, 16 Feb 2012 18:41:32 -0600

nova (1.0.0-GENERIC~1.gbp1228db) UNRELEASED; urgency=low

  ** SNAPSHOT build @1228dbe35969b3952e9dfbfd30ba000c32f5e215 **

  * UNRELEASED

 -- vagrant <vagrant@vagrant>  Thu, 16 Feb 2012 17:05:13 -0600

nova (1.0.0-GENERIC~1.gbp1228db) UNRELEASED; urgency=low

  ** SNAPSHOT build @1228dbe35969b3952e9dfbfd30ba000c32f5e215 **

  [ Michael Basnight ]
  * Adding a test for checking the dots in urls

  [ Mike Asthalter ]
  * made final updates to Devguide and Getting Started for Hackathon
  * update pom, auth examples, devguide, getting started with service
    catalog updates for auth examples, LON endpoint, and absolute limits
    for instances

  [ vagrant ]

 -- vagrant <vagrant@vagrant>  Thu, 16 Feb 2012 16:54:26 -0600

nova (1.0.0-GENERIC~1.gbp124b03) UNRELEASED; urgency=low

  ** SNAPSHOT build @124b0367a4cefe3eb38554fd6afa4d995df53358 **

  [ Nirmal Ranganathan ]
  * Updating the xsd/wadl for instance actions - reboot, resize

  [ Tim Simpson ]
  * Initial check-in of reboot code.
  * Bug fix.

  [ Ed Cranford ]
  * Groundwork for mgmt instance detail call.
  * Fixed the reddwarfclient types and some tests.
  * XSD and WADL changes.
  * Fixed metadata and made a pair of changes to aid in our exodus of
    nova
  * Removed a vestigial /versions/ change that isn't part of this
    branch.
  * Fixed a typo in the mgmt wadl
  * Fixed WADL and metadata, and generated relevant examples.
  * It's dangerous to go without tests! Take this!

  [ Michael Basnight ]
  * Adding the set onboot to false

  [ Tim Simpson ]
  * Removing non-existing import.

  [ Nirmal Ranganathan ]
  * Revert "Removing non-existing import."

  [ Mike Asthalter ]
  * updated docs and management.wadl based on comments from reviewers

  [ Michael Basnight ]
  * Updating the codebase to work with restarts.

  [ Nirmal Ranganathan ]
  * Adding support for resizing of instance volumes

  [ Michael Basnight ]
  * Fixing the unit test double quote oops.

  [ Nirmal Ranganathan ]
  * Removing X_AUTH_PROJECT_ID header requirement
  * Removed the project id references from the examples and docs

  [ Mike Asthalter ]
  * updated devguide and getting started with DFW endpoint

  [ Tim Simpson ]
  * Attempting to fix the DNS re-auth error.
  * Added soft and hard reboots to the REST API.
  * Adding ability to CI script to allow running of DNS tests from the
    vagrantci command.
  * Added restarts to the example generation script.
  * Adding generated reboot samples.

  [ Craig Vyvial ]
  * update the wadl and xsd with interrogation data
  * create new mapping for diagnostics
  * adding in the diagnostics call to the mgmt api and tests
  * removing duplicated build agent method by making a diagnostic helper
    method

  [ Tim Simpson ]
  * Made the Reddwarf and RSDNS unit tests run as part of CI.

  [ Ed Cranford ]
  * Build a tiny class designed to make sense of the various guest
    statuses we may have. Tempted to use the infomercial format where
    someone is trying to get the status of an instance and it's in black
    and white and they're struggling a lot more than you'd expect, and
    then yell THERE'S GOT TO BE A BETTER WAY! so I can step in and the
    commercial switches to color as I say WELL NOW THERE IS!
  * Removed a log debug line and changed a pair of exceptions to a more
    native type.
  * Ah, the old NotFound switcheroo....

  [ Nirmal Ranganathan ]
  * Refactoring the cli and moving the management stuff into reddwarf-
    manage

  [ Tim Simpson ]
  * Added fix and test for DNS eventlet bug.

  [ Craig Vyvial ]
  * adding fdSize to the diagnostics data
  * change the tests for fat pete testing the vmPeak instead of the
    vmHwm

  [ Tim Simpson ]
  * Fixing DNS unit tests to accomodate DNS eventlet fix.

  [ Nirmal Ranganathan ]
  * Updated the example generator to use separate instances for xml and
    json

  [ Ed Cranford ]
  * Fixing the root history so it reports the uuid and not the local id,
    so the return actually makes sense.
  * Now we also test that the ids are the same. This explains why we
    missed the id before.

  [ Nirmal Ranganathan ]
  * Removing X_AUTH_PROJECT_ID header requirement
  * Generating all the my.cnf templates during dbaas-mycnf package build
  * Adding examples and updating docs for mgmt instance diagnostics and
    list all instances
  * Fracturing the reboot into restart in the public api and reboot in
    the management api
  * Updating status for volume resizing

  [ vagrant ]

 -- vagrant <vagrant@vagrant>  Thu, 16 Feb 2012 13:10:45 -0600

nova (1.0.0-GENERIC~1.gbpad8b8f) lucid; urgency=low

  ** SNAPSHOT build @36b9a5dec61e31de9d76e190fd0fcf9c6f30f846 **

  [aut-gen]
  * generated version. THIS NEEDS TO BE FIXED!

 -- Hub Cap <mbasnigh@rackspace.com>  Fri, 05 Aug 2011 03:24:43 -0500

nova (2011.3~d4~20110812.1417-0ubuntu1) oneiric; urgency=low

  [Chuck Short]
  * New upstream version
  * Dont respawn the upstart jobs if nova is failing.
  * Remove python-ipy.

  [ Dan Prince ]
  * Updated the ajaxterm patch to work with latest nova code (privsep)
  * Added python-lxml to python-nova build-deps.

  [ Thomas Goirand ]
  * Add copyright info for ipv6 class for boto.

  [ Soren Hansen ]
  * Add parted to sudoers file.
  * Add Depends: python-simplejson and Conflicts: python-cjson due to
    bug #800465 which caused the test suite to fail.
  * Remove nova-instancemonitor package (dropped upstream).
  * Remove twisted dependency (dropped upstream).
  * Create nova-compute-{kvm,lxc,uml,xen} packages that pull in the
    right packages and configures nova to use the hypervisor in
    question.

  [ Thierry Carrez (ttx) ]
  * Added python-xattr to build deps, apprently this is now needed
  * Removed python-xattr from build deps, now that python-glance properly
    depends on it
  * Added radvd to nova_sudoers file (LP: #758072)
  * Make nova.conf non-world-readable, as it may contain DB passwords
    (LP: #798878)

  [ Brian Waldon ]
  * Remove nova-instancemonitor man page stub.
  * Remove nova-instancemonitor from apport hook.

  [ Monty Taylor ]
  * Added python-lxml to build-deps.

  [ Scott Moser ]
  * use trailing '/' on all usages of chown to support the case where
    the directory is a symlink

 -- Chuck Short <zulcss@ubuntu.com>  Fri, 12 Aug 2011 03:12:38 -0400

nova (2011.3~d1-0ubuntu1) oneiric; urgency=low

  [Chuck Short]
  * New upstream version.

  [Soren Hansen]
  * libvirt plugin was refactored. Adjust ajaxterm patch accordingly.
  * Add /sbin/brctl to sudoers (it moved from /usr/sbin to /sbin in
    Oneiric).
  * Add dependencies on dnsmasq-base and bridge-utils to nova-network.
    (LP: #790661)

 -- Chuck Short <zulcss@ubuntu.com>  Thu, 02 Jun 2011 09:30:39 -0400

nova (2011.3~bzr1108-0ubuntu1) oneiric; urgency=low

  [ Thomas Goirand ]
  * Removes embedded jquery.js from nova-doc package.
  * Added some manpages stubs to make package lintian clean.
  * Adds a nova-volume.default where the admin can decide what VG to use.
  * debian/nova-objectstore.logrotate working in Debian.
  * Do not have debian/*.upstart files in Debian. Using debian/*.upstart.in
  and copying them as .upstart only if building in Ubuntu.
  * Nova init files reviewed so that they are working in Debian.
  * Initscripts of nova-compute now has a Should-Start: libvirt-bin
  * nova-compute.postinst working with libvirt group in Debian.
  * Reviewed the package descriptions.
  * Reviewed some dependencies in debian/control (added some adduser and
  lsb-base depends).
  * Added missing binary Depends: (nova-manage must depends on
  python-amqplib unless failing puiparts tests, nova-compute is pretty
  usless without qemu-utils)
  * Removes .gitignore files from binaries.
  * Don't package nova-manage.1 man page if we aren't building docs.
  * Packages correctly: nova-manage.1 and not novamanage.1 !!!

  [ Soren Hansen ]
  * Bump required version of libvirt-bin on Ubuntu to 0.8.8.
  * Drop the last of the AOE dependencies. iSCSI is the default
    nowadays.
  * Make the decision about the name of the libvirt group at build time
    rather than runtime. (LP: #781716)

  [ Vishvananda Ishaya ]
  * Add dd to the sudo cmd list.
  * Add a nova-vncproxy package.

 -- Soren Hansen <soren@ubuntu.com>  Wed, 25 May 2011 15:57:03 +0200

nova (2011.2-0ubuntu1) natty; urgency=low

  * New upstream release. 

 -- Chuck Short <zulcss@ubuntu.com>  Fri, 15 Apr 2011 07:14:43 -0400

nova (2011.2~gamma1-0ubuntu1) natty; urgency=low

  [Chuck Short]
  * New upstream release.
  * debian/nova-doc.docs: Adjust directory to the right docs path.

  [Soren Hansen]
  * Refresh nova-manage-flags patch.
  * Adjust call to ajaxterm to work with the packaged ajaxterm instead
    of the one we ship in the tarball.
  * Remove all traces of the adminclient package. It moved to its own
    tarball. There are no known consumers, so this should not be a
    problem.
  * Remove build-dependency on python-suds again.
  * setup.py now takes care of installing the CA code, so yank those
    bits from debian/nova-common.install.
  * setup.py now places api-paste.ini correctly, so stop working around
    it.

 -- Chuck Short <zulcss@ubuntu.com>  Fri, 08 Apr 2011 10:49:10 -0400

nova (2011.2~bzr925-0ubuntu1) natty; urgency=low

  [Chuck Short]
  * New upstream release.

  [Soren Hansen]
  * Make the build fail if the test suite does. The test that used to
    fail on the buildd's has been complete rewritten. (LP: #712481)
  * Specify that we need Sphinx > 1.0 to build.
  * Remove refresh_bzr_branches target from debian/rules. It is not used
    anymore.
  * Clean up after doc builds on debian/rules clean.
  * Add a nova-ajax-console-proxy package.
  * Add Recommends: ajaxterm to nova-compute, so that nova-ajax-console-
    proxy will have something to connect to.
  * Stop depending on aoetools. iscsi is the default nowadays (and has
    been for a while).
  * Move dependency on open-iscsi from nova-volume to nova-compute.
    They're client tools, so that's where they belong.
  * Add a build-depends on python-suds.
  * Add logrote config for nova-ajax-console-proxy.
  * Add upstart job for nova-ajax-console-proxy.

 -- Chuck Short <zulcss@ubuntu.com>  Thu, 31 Mar 2011 11:25:10 -0400

nova (2011.2~bzr828-0ubuntu1) natty; urgency=low

  * New upstream version. 
  * debian/control: Add python-lockfile as a build dependency.

 -- Chuck Short <zulcss@ubuntu.com>  Fri, 18 Mar 2011 09:28:17 -0400

nova (2011.2~bzr786-0ubuntu1) natty; urgency=low

  [Chuck Short]
  * New upstream version.

  [ Thierry Carrez (ttx) ]
  * nova-api.conf was renamed api-paste.ini (LP: #705453)

  [ Soren Hansen ]
  * Start on filesystem event rather than local-filesystems.
  * Weed out a *lot* of out-dated information from debian/control.
  * Create /var/lock/nova in upstart jobs and set lock_path in the
    flagfile.
  * Add dependency on python-novaclient.

 -- Chuck Short <zulcss@ubuntu.com>  Fri, 11 Mar 2011 09:41:45 -0500

nova (2011.2~bzr760-0ubuntu1) natty; urgency=low

  [Chuck Short]
  * New upstream version.
  * Fix up typos in debian/control. (LP: #721414)

  [ Thierry Carrez (ttx) ]
  * Add python-distutils-extra as build-dep (for i18n)
  * Ship .mo files in /usr/share/locale
  * Add lvdisplay to nova_sudoers, clean up dupe entries

  [ Soren Hansen ]
  * Always run "nova-manage db sync" from postinst, unless an explicit
    sql_connection has been set in nova.conf. (LP: #705758)

 -- Chuck Short <zulcss@ubuntu.com>  Fri, 04 Mar 2011 10:19:52 -0500

nova (2011.2~bzr700-0ubuntu1) natty; urgency=low

  [ Chuck Short ]
  * New upstream version.

  [ Soren Hansen ]
  * Rely on --logdir to find and use the correct logfile.
  * Remove the postrotate magic for all but nova-objectstore. It is not
    needed anymore due to using RotatingFileHandler for logging.

  [ Thierry Carrez ]
  * Ship adminclient in a separate package.

 -- Chuck Short <zulcss@ubuntu.com>  Fri, 18 Feb 2011 09:36:22 -0500

nova (2011.2~bzr663-0ubuntu1) natty; urgency=low

  [ Chuck Short ]
  * New upstream verison.
  * Add python-paramiko to debian/control.

  [Soren Hansen]
  * Honour nocheck and nodocs in DEB_BUILD_OPTIONS.
  * Add /sbin/route to sudoers file.

 -- Chuck Short <zulcss@ubuntu.com>  Fri, 11 Feb 2011 10:27:54 -0500

nova (2011.1-0ubuntu2) natty; urgency=low

  * Dont fail unittest because of buildd problems. 

 -- Chuck Short <zulcss@ubuntu.com>  Thu, 03 Feb 2011 07:26:54 -0500

nova (2011.1-0ubuntu1) natty; urgency=low

  * New upstream release.
  * Add recommends to python-mysqldb (LP: #708511)
  * Add dependency of iscsitarget to nova-volume and a sugestion to use 
    sheepdog (LP: #708141)
  * Suggest radvd for those who want to try ipv6.

 -- Chuck Short <zulcss@ubuntu.com>  Thu, 03 Feb 2011 07:00:52 -0500

nova (2011.1~bzr638-0ubuntu1) natty; urgency=low

  * New upstream snapshot. 

 -- Chuck Short <zulcss@ubuntu.com>  Fri, 28 Jan 2011 13:41:00 -0500

nova (2011.1~bzr597-0ubuntu1) natty; urgency=low

  [ Chuck Short ]
  * New upstream snapshot.
  * Add socat, iscsiadm, and vgs to nova_sudoers.
  * Add aoetools, open-iscsi to dependencies for nova-volume.
  * Add socat to dependencies for nova-network.
  * Add python-paste and python-pastedeploy as build dependency.
  * Add python-tempita and python-migrate as build dependency.

  [ Soren Hansen ]
  * Add dependency on sudo.
  * Add upstart jobs for everything.
  * Adjust test run for nosetests newness.
  * Quiet nova-compute's postinst script.
  * Change the dependency on sqlalchemy to ensure the C extension gets
    installed for versions of the package where that was split out.
  * Don't chgrp anything to the 'nogroup' group. The whole idea of the
    nogroup group is that it doesn't own anything, so only being a
    member of that shouldn't grant you access to anything. Making dirs
    and files owned by nogroup messes this up.
  * Update nova-manage patch.
  * Add iptables-{restore,save} to sudoers file.
  * Create a logrotate config for each daemon. Make them restart the
    service after rotation.
  * Drop python-redis dependency.
  * Change python compatibility from "2.6" to "2.6-"
  * Add launchpad page to watch file.
  * Set Python-Version control fields for python-nova.
  * Add ip6tables-{save,restore} to sudoers file. (LP: #704458)
  * Add python-glance dependency.
  * Include paste config for nova-api.
  * Initialise database on initial install.

  [ Rick Clark ]
  * Add dependency on python-cheetah
  * Added iscsi target admin tool to sudoers file.
  * Specified log for nova-objectstore.
  * Set verbose logging in nova.conf.

  [ Monty Taylor ]
  * Add dependency on python-netaddr

  [ Thierry Carrez (ttx) ]
  * Added qemu-nbd to nova_sudoers
  * Added modprobe nbd to nova-compute upstart script

 -- Thierry Carrez (ttx) <thierry@openstack.org>  Mon, 24 Jan 2011 14:32:19 +0100

nova (2011.1~bzr456-0ubuntu1) natty; urgency=low

  [ Chuck Short ]
  * New upstream snapshot.
  * debian/source_nova.py:
    Add apport hook.

  [ Soren Hansen ]
  * Removed logdir.patch. Merged upstream.
  * Drop flagfile_location.patch: Merged upstream.
  * Use new --state_path flag and weed out the many direct references to
    /var/lib/nova.
  * Leave it to upstream's 'setup.py install' to install templates.
    Remove explicit paths from nova.conf.

 -- Chuck Short <zulcss@ubuntu.com>  Mon, 13 Dec 2010 10:17:01 -0500

nova (2011.1~bzr412-0ubuntu1) natty; urgency=low

  [ Soren Hansen ]
  * New upstream snapshot.
  * Added the new tarballs page to debian/watch.
  * Clean out patch-branches (everything is upstream now).
  * Remove redis-server as a build-depends and don't start it for tests
    anymore.
  * Add missing dependency on python-webob.
  * Force a python-support run (so avoid deferring it until dpkg
    triggers run). (LP: #660428)
  * Remove build and runtime dependencies on python-tornado. It's not
    needed anymore.
  * logdir.patch: Add a --logdir option to workers so that they can all
    use the same flagfile. (lp:~soren/nova/logdir-flag)
  * Consolidate all the flagfiles into one.
  * flagfile_location.patch: Patch from upstream to ensure all workers
    have a consistent way of finding their flagfile.
    (lp:~soren/nova/unify-default-flagfile-location)
  * nova-manage_flagfile_location.patch: Make sure nova-manage uses
    /etc/nova/nova.conf by default.
  * Add build and runtime dependency on openssl. It used to be pulled in
    by python-tornado, but is actually used directly by nova.

  [ Chuck Short ]
  * debian/control:
   - Add dependency to python-rrdtool so that nova-instancemonitor
     doesnt complain about missing python modules when starting.
  * debian/nova-common.install: Add missing templates.
  * debian/nova-*.conf: Update flagfiles to handle upstream changes.
  * Dropped start-redis since we dont do redis anymore.

 -- Soren Hansen <soren@ubuntu.com>  Tue, 23 Nov 2010 11:17:09 +0100

nova (0.9.1~bzr331-0ubuntu2) maverick; urgency=low

  * Add a minimal patch to ensure a string gets returned as an
    instance's internal ID. (LP: #657053)

 -- Soren Hansen <soren@ubuntu.com>  Fri, 08 Oct 2010 23:16:58 +0200

nova (0.9.1~bzr331-0ubuntu1) maverick; urgency=low

  [ Soren Hansen ]
  * New upstream snapshot (FFe ref: LP #645936)
  * Add SQLAlchemy dependency.
  * Specify that we want sqlite and we want it in
    /var/lib/nova/nova.sqlite.
  * Move "adduser nova libvirtd" to nova-compute.postinst.
  * Add python-eventlet and python-routes dependencies.
  * Make /bin/true our error handler for init scripts.
  * Install nova-api-new as nova-api.
  * Add nova-scheduler package.
  * Add /bin/kill to sudoers.
  * Make sure nova_sudoers has the correct mode, otherwise sudo gets
    very upset.
  * Add ebtables and gawk dependencies for nwfilter stuff to work.

  [ Chuck Short ]
  * Add dependency on lvm2 for nova-volume.
  * Add lvm commands to sudoers list.

 -- Soren Hansen <soren@ubuntu.com>  Tue, 21 Sep 2010 16:36:37 +0200

nova (0.9.1~bzr265-0ubuntu1) maverick; urgency=low

  * New upstream snapshot (FFe: LP: #628027)
  * Install uml libvirt xml file.
  * Add adduser as a dependency of nova-common so that we can create a
    nova user.
  * Create a nova user on install.
  * Create a separate tmpdir for nova, so that we can limit calls to
    chmod/chown to dirs and files in that directory.
  * Add nova-network package.
  * Add a sudoers file for nova, so that we don't have to run as root
    anymore.
  * Fix all init scripts to run their respective daemons as nova.
  * Update nova-compute flag file to account for moved libvirt
    templates.
  * Make all init scripts create /var/run/nova.
  * Move all pidfiles into /var/run/nova.
  * Make all daemons create a log file in /var/log/nova.
  * Respect DEB_BUILD_OPTIONS=nocheck.
  * Add a logrotate config file.

 -- Soren Hansen <soren@ubuntu.com>  Tue, 07 Sep 2010 13:12:10 +0200

nova (0.9.1~bzr204-0ubuntu2) maverick; urgency=low

  * Make sure debian/start-redis is executable.

 -- Soren Hansen <soren@ubuntu.com>  Sat, 07 Aug 2010 11:38:30 +0200

nova (0.9.1~bzr204-0ubuntu1) maverick; urgency=low

  * First OpenStack release.

 -- Soren Hansen <soren@ubuntu.com>  Wed, 04 Aug 2010 13:27:50 +0200

